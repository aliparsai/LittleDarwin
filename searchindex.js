Search.setIndex({"alltitles":{"API Reference":[[0,null]],"Contents:":[[1,null]],"LittleDarwin documentation":[[1,null]]},"docnames":["api","index"],"envversion":{"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,"sphinx.ext.todo":2,"sphinx.ext.viewcode":1},"filenames":["api.rst","index.rst"],"indexentries":{"aggregatereport() (littledarwin.javamutate.javamutate method)":[[0,"littledarwin.JavaMutate.JavaMutate.aggregateReport",false]],"applymutation() (littledarwin.javamutate.mutation method)":[[0,"littledarwin.JavaMutate.Mutation.applyMutation",false]],"arithmeticoperatorreplacementbinary (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementBinary",false]],"arithmeticoperatorreplacementshortcut (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementShortcut",false]],"arithmeticoperatorreplacementunary (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementUnary",false]],"assignmentoperatorreplacementshortcut (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.AssignmentOperatorReplacementShortcut",false]],"buildphase() (in module littledarwin.littledarwin)":[[0,"littledarwin.LittleDarwin.buildPhase",false]],"byteoffset (littledarwin.javamutate.mutation property)":[[0,"littledarwin.JavaMutate.Mutation.byteOffset",false]],"conditionaloperatordeletion (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.ConditionalOperatorDeletion",false]],"conditionaloperatorreplacement (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.ConditionalOperatorReplacement",false]],"countmutants() (littledarwin.javamutate.javamutate method)":[[0,"littledarwin.JavaMutate.JavaMutate.countMutants",false]],"cssclass (littledarwin.javamutate.mutationoperator property)":[[0,"littledarwin.JavaMutate.MutationOperator.cssClass",false]],"cssstyle (littledarwin.javamutate.javamutate property)":[[0,"littledarwin.JavaMutate.JavaMutate.cssStyle",false]],"distance() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.distance",false]],"filtercriteria() (littledarwin.javamutate.arithmeticoperatorreplacementbinary method)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementBinary.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.arithmeticoperatorreplacementshortcut method)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementShortcut.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.arithmeticoperatorreplacementunary method)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementUnary.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.assignmentoperatorreplacementshortcut method)":[[0,"littledarwin.JavaMutate.AssignmentOperatorReplacementShortcut.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.conditionaloperatordeletion method)":[[0,"littledarwin.JavaMutate.ConditionalOperatorDeletion.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.conditionaloperatorreplacement method)":[[0,"littledarwin.JavaMutate.ConditionalOperatorReplacement.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.logicaloperatorreplacement method)":[[0,"littledarwin.JavaMutate.LogicalOperatorReplacement.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.mutationoperator method)":[[0,"littledarwin.JavaMutate.MutationOperator.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.nullifyinputvariable method)":[[0,"littledarwin.JavaMutate.NullifyInputVariable.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.nullifyobjectinitialization method)":[[0,"littledarwin.JavaMutate.NullifyObjectInitialization.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.nullifyreturnvalue method)":[[0,"littledarwin.JavaMutate.NullifyReturnValue.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.relationaloperatorreplacement method)":[[0,"littledarwin.JavaMutate.RelationalOperatorReplacement.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.removemethod method)":[[0,"littledarwin.JavaMutate.RemoveMethod.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.removenullcheck method)":[[0,"littledarwin.JavaMutate.RemoveNullCheck.filterCriteria",false]],"filtercriteria() (littledarwin.javamutate.shiftoperatorreplacement method)":[[0,"littledarwin.JavaMutate.ShiftOperatorReplacement.filterCriteria",false]],"filtercriteriabinaryexpression() (littledarwin.javamutate.traditionalmutationoperator method)":[[0,"littledarwin.JavaMutate.TraditionalMutationOperator.filterCriteriaBinaryExpression",false]],"filtercriteriaunaryexpression() (littledarwin.javamutate.traditionalmutationoperator method)":[[0,"littledarwin.JavaMutate.TraditionalMutationOperator.filterCriteriaUnaryExpression",false]],"filterfiles() (littledarwin.javaio.javaio method)":[[0,"littledarwin.JavaIO.JavaIO.filterFiles",false]],"findnodes() (littledarwin.javamutate.mutationoperator method)":[[0,"littledarwin.JavaMutate.MutationOperator.findNodes",false]],"findnodes() (littledarwin.javamutate.nullifyinputvariable method)":[[0,"littledarwin.JavaMutate.NullifyInputVariable.findNodes",false]],"findnodes() (littledarwin.javamutate.nullifyobjectinitialization method)":[[0,"littledarwin.JavaMutate.NullifyObjectInitialization.findNodes",false]],"findnodes() (littledarwin.javamutate.nullifyreturnvalue method)":[[0,"littledarwin.JavaMutate.NullifyReturnValue.findNodes",false]],"findnodes() (littledarwin.javamutate.removemethod method)":[[0,"littledarwin.JavaMutate.RemoveMethod.findNodes",false]],"findnodes() (littledarwin.javamutate.removenullcheck method)":[[0,"littledarwin.JavaMutate.RemoveNullCheck.findNodes",false]],"findnodes() (littledarwin.javamutate.traditionalmutationoperator method)":[[0,"littledarwin.JavaMutate.TraditionalMutationOperator.findNodes",false]],"gatherhigherordermutants() (littledarwin.javamutate.javamutate method)":[[0,"littledarwin.JavaMutate.JavaMutate.gatherHigherOrderMutants",false]],"gathermutants() (littledarwin.javamutate.javamutate method)":[[0,"littledarwin.JavaMutate.JavaMutate.gatherMutants",false]],"generatehtmlfinalreport() (littledarwin.reportgenerator.reportgenerator method)":[[0,"littledarwin.ReportGenerator.ReportGenerator.generateHTMLFinalReport",false]],"generatehtmlreportperfile() (littledarwin.reportgenerator.reportgenerator method)":[[0,"littledarwin.ReportGenerator.ReportGenerator.generateHTMLReportPerFile",false]],"generatemutants() (littledarwin.javamutate.arithmeticoperatorreplacementbinary method)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementBinary.generateMutants",false]],"generatemutants() (littledarwin.javamutate.arithmeticoperatorreplacementshortcut method)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementShortcut.generateMutants",false]],"generatemutants() (littledarwin.javamutate.arithmeticoperatorreplacementunary method)":[[0,"littledarwin.JavaMutate.ArithmeticOperatorReplacementUnary.generateMutants",false]],"generatemutants() (littledarwin.javamutate.assignmentoperatorreplacementshortcut method)":[[0,"littledarwin.JavaMutate.AssignmentOperatorReplacementShortcut.generateMutants",false]],"generatemutants() (littledarwin.javamutate.conditionaloperatordeletion method)":[[0,"littledarwin.JavaMutate.ConditionalOperatorDeletion.generateMutants",false]],"generatemutants() (littledarwin.javamutate.conditionaloperatorreplacement method)":[[0,"littledarwin.JavaMutate.ConditionalOperatorReplacement.generateMutants",false]],"generatemutants() (littledarwin.javamutate.logicaloperatorreplacement method)":[[0,"littledarwin.JavaMutate.LogicalOperatorReplacement.generateMutants",false]],"generatemutants() (littledarwin.javamutate.mutationoperator method)":[[0,"littledarwin.JavaMutate.MutationOperator.generateMutants",false]],"generatemutants() (littledarwin.javamutate.nullifyinputvariable method)":[[0,"littledarwin.JavaMutate.NullifyInputVariable.generateMutants",false]],"generatemutants() (littledarwin.javamutate.nullifyobjectinitialization method)":[[0,"littledarwin.JavaMutate.NullifyObjectInitialization.generateMutants",false]],"generatemutants() (littledarwin.javamutate.nullifyreturnvalue method)":[[0,"littledarwin.JavaMutate.NullifyReturnValue.generateMutants",false]],"generatemutants() (littledarwin.javamutate.relationaloperatorreplacement method)":[[0,"littledarwin.JavaMutate.RelationalOperatorReplacement.generateMutants",false]],"generatemutants() (littledarwin.javamutate.removemethod method)":[[0,"littledarwin.JavaMutate.RemoveMethod.generateMutants",false]],"generatemutants() (littledarwin.javamutate.removenullcheck method)":[[0,"littledarwin.JavaMutate.RemoveNullCheck.generateMutants",false]],"generatemutants() (littledarwin.javamutate.shiftoperatorreplacement method)":[[0,"littledarwin.JavaMutate.ShiftOperatorReplacement.generateMutants",false]],"generatemutantsbinaryexpression() (littledarwin.javamutate.traditionalmutationoperator method)":[[0,"littledarwin.JavaMutate.TraditionalMutationOperator.generateMutantsBinaryExpression",false]],"generatemutantsunaryexpression() (littledarwin.javamutate.traditionalmutationoperator method)":[[0,"littledarwin.JavaMutate.TraditionalMutationOperator.generateMutantsUnaryExpression",false]],"generatenewfile() (littledarwin.javaio.javaio method)":[[0,"littledarwin.JavaIO.JavaIO.generateNewFile",false]],"getaggregatecomplexityreport() (littledarwin.javaio.javaio method)":[[0,"littledarwin.JavaIO.JavaIO.getAggregateComplexityReport",false]],"getallinstantiablesubclasses() (in module littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.getAllInstantiableSubclasses",false]],"getcyclomaticcomplexity() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getCyclomaticComplexity",false]],"getcyclomaticcomplexityallmethods() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getCyclomaticComplexityAllMethods",false]],"getfilecontent() (littledarwin.javaio.javaio method)":[[0,"littledarwin.JavaIO.JavaIO.getFileContent",false]],"getinmethodlines() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getInMethodLines",false]],"getline() (littledarwin.javamutate.mutant method)":[[0,"littledarwin.JavaMutate.Mutant.getLine",false]],"getlinesofcodepermethod() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getLinesOfCodePerMethod",false]],"getmethodnamefornode() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getMethodNameForNode",false]],"getmethodranges() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getMethodRanges",false]],"getmethodtypefornode() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getMethodTypeForNode",false]],"getnode() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getNode",false]],"gettext() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.getText",false]],"initiatedatabase() (littledarwin.reportgenerator.reportgenerator method)":[[0,"littledarwin.ReportGenerator.ReportGenerator.initiateDatabase",false]],"instantiatemutationoperators() (littledarwin.javamutate.javamutate method)":[[0,"littledarwin.JavaMutate.JavaMutate.instantiateMutationOperators",false]],"isinrange() (littledarwin.javamutate.mutation method)":[[0,"littledarwin.JavaMutate.Mutation.isInRange",false]],"javaio (class in littledarwin.javaio)":[[0,"littledarwin.JavaIO.JavaIO",false]],"javamutate (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.JavaMutate",false]],"javaparse (class in littledarwin.javaparse)":[[0,"littledarwin.JavaParse.JavaParse",false]],"listfiles() (littledarwin.javaio.javaio method)":[[0,"littledarwin.JavaIO.JavaIO.listFiles",false]],"littledarwin.javaio":[[0,"module-littledarwin.JavaIO",false]],"littledarwin.javalexer":[[0,"module-littledarwin.JavaLexer",false]],"littledarwin.javamutate":[[0,"module-littledarwin.JavaMutate",false]],"littledarwin.javaparse":[[0,"module-littledarwin.JavaParse",false]],"littledarwin.javaparser":[[0,"module-littledarwin.JavaParser",false]],"littledarwin.license":[[0,"module-littledarwin.License",false]],"littledarwin.littledarwin":[[0,"module-littledarwin.LittleDarwin",false]],"littledarwin.reportgenerator":[[0,"module-littledarwin.ReportGenerator",false]],"littledarwinerrorstrategy (class in littledarwin.javaparse)":[[0,"littledarwin.JavaParse.LittleDarwinErrorStrategy",false]],"logicaloperatorreplacement (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.LogicalOperatorReplacement",false]],"main() (in module littledarwin.littledarwin)":[[0,"littledarwin.LittleDarwin.main",false]],"module":[[0,"module-littledarwin.JavaIO",false],[0,"module-littledarwin.JavaLexer",false],[0,"module-littledarwin.JavaMutate",false],[0,"module-littledarwin.JavaParse",false],[0,"module-littledarwin.JavaParser",false],[0,"module-littledarwin.License",false],[0,"module-littledarwin.LittleDarwin",false],[0,"module-littledarwin.ReportGenerator",false]],"mutant (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.Mutant",false]],"mutatecode() (littledarwin.javamutate.mutant method)":[[0,"littledarwin.JavaMutate.Mutant.mutateCode",false]],"mutation (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.Mutation",false]],"mutationoperator (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.MutationOperator",false]],"mutationphase() (in module littledarwin.littledarwin)":[[0,"littledarwin.LittleDarwin.mutationPhase",false]],"nullifyinputvariable (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.NullifyInputVariable",false]],"nullifyobjectinitialization (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.NullifyObjectInitialization",false]],"nullifyreturnvalue (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.NullifyReturnValue",false]],"numerify() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.numerify",false]],"outputlicense() (in module littledarwin.license)":[[0,"littledarwin.License.outputLicense",false]],"parse() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.parse",false]],"parsecmdargs() (in module littledarwin.littledarwin)":[[0,"littledarwin.LittleDarwin.parseCmdArgs",false]],"recover() (littledarwin.javaparse.littledarwinerrorstrategy method)":[[0,"littledarwin.JavaParse.LittleDarwinErrorStrategy.recover",false]],"relationaloperatorreplacement (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.RelationalOperatorReplacement",false]],"removemethod (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.RemoveMethod",false]],"removenullcheck (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.RemoveNullCheck",false]],"reportgenerator (class in littledarwin.reportgenerator)":[[0,"littledarwin.ReportGenerator.ReportGenerator",false]],"returnlicense() (in module littledarwin.license)":[[0,"littledarwin.License.returnLicense",false]],"seek() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.seek",false]],"seekallnodes() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.seekAllNodes",false]],"seekfirstmatchingparent() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.seekFirstMatchingParent",false]],"seeknode() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.seekNode",false]],"setnode() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.setNode",false]],"shiftoperatorreplacement (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.ShiftOperatorReplacement",false]],"stub (littledarwin.javamutate.mutant property)":[[0,"littledarwin.JavaMutate.Mutant.stub",false]],"timeoutalternative() (in module littledarwin.littledarwin)":[[0,"littledarwin.LittleDarwin.timeoutAlternative",false]],"tostring() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.toString",false]],"traditionalmutationoperator (class in littledarwin.javamutate)":[[0,"littledarwin.JavaMutate.TraditionalMutationOperator",false]],"tree2dot() (littledarwin.javaparse.javaparse method)":[[0,"littledarwin.JavaParse.JavaParse.tree2DOT",false]]},"objects":{"littledarwin":[[0,0,0,"-","JavaIO"],[0,0,0,"-","JavaLexer"],[0,0,0,"-","JavaMutate"],[0,0,0,"-","JavaParse"],[0,0,0,"-","JavaParser"],[0,0,0,"-","License"],[0,0,0,"-","LittleDarwin"],[0,0,0,"-","ReportGenerator"]],"littledarwin.JavaIO":[[0,1,1,"","JavaIO"]],"littledarwin.JavaIO.JavaIO":[[0,2,1,"","filterFiles"],[0,2,1,"","generateNewFile"],[0,2,1,"","getAggregateComplexityReport"],[0,2,1,"","getFileContent"],[0,2,1,"","listFiles"]],"littledarwin.JavaMutate":[[0,1,1,"","ArithmeticOperatorReplacementBinary"],[0,1,1,"","ArithmeticOperatorReplacementShortcut"],[0,1,1,"","ArithmeticOperatorReplacementUnary"],[0,1,1,"","AssignmentOperatorReplacementShortcut"],[0,1,1,"","ConditionalOperatorDeletion"],[0,1,1,"","ConditionalOperatorReplacement"],[0,1,1,"","JavaMutate"],[0,1,1,"","LogicalOperatorReplacement"],[0,1,1,"","Mutant"],[0,1,1,"","Mutation"],[0,1,1,"","MutationOperator"],[0,1,1,"","NullifyInputVariable"],[0,1,1,"","NullifyObjectInitialization"],[0,1,1,"","NullifyReturnValue"],[0,1,1,"","RelationalOperatorReplacement"],[0,1,1,"","RemoveMethod"],[0,1,1,"","RemoveNullCheck"],[0,1,1,"","ShiftOperatorReplacement"],[0,1,1,"","TraditionalMutationOperator"],[0,4,1,"","getAllInstantiableSubclasses"]],"littledarwin.JavaMutate.ArithmeticOperatorReplacementBinary":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.ArithmeticOperatorReplacementShortcut":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.ArithmeticOperatorReplacementUnary":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.AssignmentOperatorReplacementShortcut":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.ConditionalOperatorDeletion":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.ConditionalOperatorReplacement":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.JavaMutate":[[0,2,1,"","aggregateReport"],[0,2,1,"","countMutants"],[0,3,1,"","cssStyle"],[0,2,1,"","gatherHigherOrderMutants"],[0,2,1,"","gatherMutants"],[0,2,1,"","instantiateMutationOperators"]],"littledarwin.JavaMutate.LogicalOperatorReplacement":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.Mutant":[[0,2,1,"","getLine"],[0,2,1,"","mutateCode"],[0,3,1,"","stub"]],"littledarwin.JavaMutate.Mutation":[[0,2,1,"","applyMutation"],[0,3,1,"","byteOffset"],[0,2,1,"","isInRange"]],"littledarwin.JavaMutate.MutationOperator":[[0,3,1,"","cssClass"],[0,2,1,"","filterCriteria"],[0,2,1,"","findNodes"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.NullifyInputVariable":[[0,2,1,"","filterCriteria"],[0,2,1,"","findNodes"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.NullifyObjectInitialization":[[0,2,1,"","filterCriteria"],[0,2,1,"","findNodes"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.NullifyReturnValue":[[0,2,1,"","filterCriteria"],[0,2,1,"","findNodes"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.RelationalOperatorReplacement":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.RemoveMethod":[[0,2,1,"","filterCriteria"],[0,2,1,"","findNodes"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.RemoveNullCheck":[[0,2,1,"","filterCriteria"],[0,2,1,"","findNodes"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.ShiftOperatorReplacement":[[0,2,1,"","filterCriteria"],[0,2,1,"","generateMutants"]],"littledarwin.JavaMutate.TraditionalMutationOperator":[[0,2,1,"","filterCriteriaBinaryExpression"],[0,2,1,"","filterCriteriaUnaryExpression"],[0,2,1,"","findNodes"],[0,2,1,"","generateMutantsBinaryExpression"],[0,2,1,"","generateMutantsUnaryExpression"]],"littledarwin.JavaParse":[[0,1,1,"","JavaParse"],[0,1,1,"","LittleDarwinErrorStrategy"]],"littledarwin.JavaParse.JavaParse":[[0,2,1,"","distance"],[0,2,1,"","getCyclomaticComplexity"],[0,2,1,"","getCyclomaticComplexityAllMethods"],[0,2,1,"","getInMethodLines"],[0,2,1,"","getLinesOfCodePerMethod"],[0,2,1,"","getMethodNameForNode"],[0,2,1,"","getMethodRanges"],[0,2,1,"","getMethodTypeForNode"],[0,2,1,"","getNode"],[0,2,1,"","getText"],[0,2,1,"","numerify"],[0,2,1,"","parse"],[0,2,1,"","seek"],[0,2,1,"","seekAllNodes"],[0,2,1,"","seekFirstMatchingParent"],[0,2,1,"","seekNode"],[0,2,1,"","setNode"],[0,2,1,"","toString"],[0,2,1,"","tree2DOT"]],"littledarwin.JavaParse.LittleDarwinErrorStrategy":[[0,2,1,"","recover"]],"littledarwin.License":[[0,4,1,"","outputLicense"],[0,4,1,"","returnLicense"]],"littledarwin.LittleDarwin":[[0,4,1,"","buildPhase"],[0,4,1,"","main"],[0,4,1,"","mutationPhase"],[0,4,1,"","parseCmdArgs"],[0,4,1,"","timeoutAlternative"]],"littledarwin.ReportGenerator":[[0,1,1,"","ReportGenerator"]],"littledarwin.ReportGenerator.ReportGenerator":[[0,2,1,"","generateHTMLFinalReport"],[0,2,1,"","generateHTMLReportPerFile"],[0,2,1,"","initiateDatabase"]]},"objnames":{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","property","Python property"],"4":["py","function","Python function"]},"objtypes":{"0":"py:module","1":"py:class","2":"py:method","3":"py:property","4":"py:function"},"terms":{"":0,"0":0,"1":0,"A":0,"If":0,"It":0,"The":0,"ad":0,"add":[0,1],"aggreg":0,"aggregatecomplex":0,"aggregatereport":0,"all":0,"also":0,"an":0,"analyz":0,"annot":0,"antlr4":0,"api":1,"appli":0,"applymut":0,"ar":0,"arithmet":0,"arithmeticoperatorreplacementbinari":[0,1],"arithmeticoperatorreplacementshortcut":[0,1],"arithmeticoperatorreplacementunari":[0,1],"assign":0,"assignmentoperatorreplacementshortcut":[0,1],"base":0,"begin":0,"between":0,"binari":0,"blacklist":0,"bodi":0,"bool":0,"boolean":0,"buildpath":0,"buildphas":[0,1],"byte":0,"byteoffset":0,"calcul":0,"can":0,"charact":0,"check":0,"children":0,"class":0,"code":0,"color":0,"command":0,"commandstr":0,"compilationunitcontext":0,"complex":0,"condit":0,"conditionaloperatordelet":[0,1],"conditionaloperatorreplac":[0,1],"consist":0,"constructor":0,"constructorbodycontext":0,"contain":0,"convert":0,"count":0,"countmut":0,"creat":0,"creator":0,"critera":0,"criteria":0,"css":0,"cssclass":0,"cssstyle":0,"cyclomat":0,"cyclomaticcomplexitypermethod":0,"data":0,"databasepath":0,"declar":0,"default":0,"defin":0,"delet":0,"densityreport":0,"deprec":0,"depth":0,"desiredtyp":0,"detail":1,"dict":0,"dictionari":0,"digraph":0,"directori":0,"distanc":0,"do":0,"dot":0,"each":0,"end":0,"endpo":0,"entri":0,"except":0,"express":0,"expressioncontext":0,"fals":0,"ffffff":0,"file":0,"filecont":0,"filedata":0,"filepath":0,"filter":0,"filtercriteria":0,"filtercriteriabinaryexpress":0,"filtercriteriaunaryexpress":0,"filterfil":0,"filterlist":0,"filtertyp":0,"find":0,"findnod":0,"first":0,"found":0,"from":0,"function":0,"gather":0,"gatherhigherordermut":0,"gathermut":0,"gener":0,"generatehtmlfinalreport":0,"generatehtmlreportperfil":0,"generatemut":0,"generatemutantsbinaryexpress":0,"generatemutantsunaryexpress":0,"generatenewfil":0,"get":0,"getaggregatecomplexityreport":0,"getallinstantiablesubclass":[0,1],"getcyclomaticcomplex":0,"getcyclomaticcomplexityallmethod":0,"getfilecont":0,"getinmethodlin":0,"getlin":0,"getlinesofcodepermethod":0,"getmethodnamefornod":0,"getmethodrang":0,"getmethodtypefornod":0,"getnod":0,"getter":0,"gettext":0,"given":0,"goe":0,"graphviz":0,"handl":0,"helper":0,"higher":0,"higherord":0,"higherorderdirect":0,"html":0,"i":0,"id":0,"ignor":0,"includ":0,"index":0,"indic":0,"initi":0,"initiatedatabas":0,"inject":0,"input":0,"inputdata":0,"instal":0,"instanti":0,"instantiatemutationoper":0,"int":0,"introduc":0,"isinrang":0,"its":0,"java":0,"javaio":[0,1],"javamut":[0,1],"javapars":[0,1],"javaparseobject":0,"kill":0,"licens":0,"line":0,"linenumb":0,"linesofcodepermethod":0,"list":0,"listfil":0,"littledarwin":0,"littledarwinerrorstrategi":[0,1],"littledarwinvers":0,"logic":0,"logicaloperatorreplac":[0,1],"mai":0,"main":[0,1],"map":0,"match":0,"meta":0,"metatyp":0,"method":0,"methodbodi":0,"methodbodycontext":0,"mockarg":0,"mode":0,"must":0,"mutant":[0,1],"mutantdensitypermethod":0,"mutantid":0,"mutantsperlin":0,"mutat":[0,1],"mutatecod":0,"mutationlist":0,"mutationoper":[0,1],"mutationphas":[0,1],"mutatortyp":0,"name":0,"need":0,"new":0,"node":0,"node1":0,"node2":0,"nodeid":0,"nodeindex":0,"nodetyp":0,"non":0,"none":0,"null":0,"nullifi":0,"nullifyinputvari":[0,1],"nullifyobjectiniti":[0,1],"nullifyreturnvalu":[0,1],"number":0,"numerifi":0,"object":0,"occur":0,"offset":0,"one":0,"onli":0,"oper":0,"option":0,"optionpars":0,"order":0,"origin":0,"originalfil":0,"otherwis":0,"out":0,"output":0,"outputlicens":[0,1],"param":0,"paramet":0,"parent":0,"parentclass":0,"pars":0,"parsecmdarg":[0,1],"parser":0,"point":0,"posit":0,"primit":0,"print":0,"process":0,"properti":0,"provid":0,"rang":0,"recognitionexcept":0,"recov":0,"refer":1,"relat":0,"relationaloperatorreplac":[0,1],"remov":0,"removemethod":[0,1],"removenullcheck":[0,1],"replac":0,"replacementtext":0,"report":0,"reportgener":[0,1],"reportpath":0,"repres":0,"represent":0,"request":0,"restructuredtext":1,"resultdata":0,"return":0,"returnlicens":[0,1],"root":0,"rulecontext":0,"run":0,"safe":0,"same":0,"search":0,"second":0,"see":1,"seek":0,"seekallnod":0,"seekfirstmatchingpar":0,"seeknod":0,"set":0,"setnod":0,"setter":0,"sever":0,"shift":0,"shiftoperatorreplac":[0,1],"shortcut":0,"simpl":0,"singl":0,"so":0,"sort":0,"sourc":0,"sourcecod":0,"sourcetre":0,"specif":0,"specifi":0,"start":0,"startpo":0,"statement":0,"statu":0,"stop":0,"str":0,"string":0,"stub":0,"style":0,"subclass":0,"subtre":0,"suppos":0,"surviv":0,"symbol":0,"symboldict":0,"symbollist":0,"syntax":1,"system":0,"targetpath":0,"termin":0,"text":0,"thei":0,"them":0,"those":0,"throw":0,"timeout":0,"timeoutaltern":[0,1],"top":0,"tostr":0,"tradit":0,"traditionalmutationoper":[0,1],"travers":0,"tree":0,"tree2dot":0,"true":0,"tupl":0,"two":0,"type":0,"unari":0,"uniqu":0,"us":[0,1],"valid":0,"valu":0,"variabl":0,"verbos":0,"version":0,"visual":0,"when":0,"whether":0,"within":0,"workingdirectori":0,"your":1},"titles":["API Reference","LittleDarwin documentation"],"titleterms":{"api":0,"content":1,"document":1,"littledarwin":1,"refer":0}})