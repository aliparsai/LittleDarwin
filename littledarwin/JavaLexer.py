from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


if sys.version_info[1] > 5:
	from typing import TextIO
else:
	from typing.io import TextIO

import unicodedata


def serializedATN():
    return [
        4,0,116,1143,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,
        5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,
        2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,
        7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,
        2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,
        7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
        2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
        7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,
        2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,
        7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
        2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,
        7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,
        2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,2,125,
        7,125,2,126,7,126,2,127,7,127,2,128,7,128,2,129,7,129,2,130,7,130,
        2,131,7,131,2,132,7,132,2,133,7,133,2,134,7,134,2,135,7,135,2,136,
        7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,7,140,2,141,7,141,
        2,142,7,142,2,143,7,143,2,144,7,144,2,145,7,145,2,146,7,146,2,147,
        7,147,2,148,7,148,2,149,7,149,2,150,7,150,2,151,7,151,2,152,7,152,
        2,153,7,153,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,
        1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,
        1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
        1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,
        1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
        1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,
        1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,
        1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,
        1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
        1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,
        1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,
        1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,
        1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,
        1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,
        1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
        1,52,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
        1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,57,
        1,57,1,57,1,57,3,57,701,8,57,1,58,1,58,3,58,705,8,58,1,59,1,59,1,
        59,1,59,1,59,1,59,1,59,1,59,1,59,3,59,716,8,59,1,60,1,60,1,60,3,
        60,721,8,60,1,60,1,60,1,61,1,61,1,61,5,61,728,8,61,10,61,12,61,731,
        9,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,5,62,740,8,62,10,62,12,62,
        743,9,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,64,1,64,
        1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,
        1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,
        1,78,1,78,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,82,
        1,83,1,83,1,83,1,84,1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,86,1,87,
        1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,92,1,93,
        1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,96,1,97,1,97,1,97,1,98,1,98,
        1,98,1,99,1,99,1,99,1,100,1,100,1,100,1,101,1,101,1,101,1,102,1,
        102,1,102,1,103,1,103,1,103,1,104,1,104,1,104,1,105,1,105,1,105,
        1,106,1,106,1,106,1,106,1,107,1,107,1,107,1,107,1,108,1,108,1,108,
        1,108,1,108,1,109,1,109,5,109,871,8,109,10,109,12,109,874,9,109,
        1,110,1,110,1,111,1,111,1,112,1,112,1,112,1,112,1,113,4,113,885,
        8,113,11,113,12,113,886,1,113,1,113,1,114,1,114,1,114,1,114,5,114,
        895,8,114,10,114,12,114,898,9,114,1,114,1,114,1,114,1,114,1,114,
        1,115,1,115,1,115,1,115,5,115,909,8,115,10,115,12,115,912,9,115,
        1,115,1,115,1,116,1,116,1,116,1,116,1,116,1,116,3,116,922,8,116,
        1,117,1,117,1,117,1,117,1,117,1,117,3,117,930,8,117,1,118,1,118,
        3,118,934,8,118,1,119,1,119,1,119,3,119,939,8,119,1,119,1,119,1,
        119,3,119,944,8,119,3,119,946,8,119,1,120,1,120,5,120,950,8,120,
        10,120,12,120,953,9,120,1,120,3,120,956,8,120,1,121,3,121,959,8,
        121,1,122,1,122,3,122,963,8,122,1,123,4,123,966,8,123,11,123,12,
        123,967,1,124,1,124,3,124,972,8,124,1,125,1,125,1,125,1,125,1,126,
        1,126,5,126,980,8,126,10,126,12,126,983,9,126,1,126,3,126,986,8,
        126,1,127,1,127,1,128,1,128,3,128,992,8,128,1,129,1,129,3,129,996,
        8,129,1,130,1,130,3,130,1000,8,130,1,130,1,130,1,131,1,131,5,131,
        1006,8,131,10,131,12,131,1009,9,131,1,131,3,131,1012,8,131,1,132,
        1,132,1,133,1,133,3,133,1018,8,133,1,134,1,134,3,134,1022,8,134,
        1,135,1,135,1,135,1,135,1,136,1,136,5,136,1030,8,136,10,136,12,136,
        1033,9,136,1,136,3,136,1036,8,136,1,137,1,137,1,138,1,138,3,138,
        1042,8,138,1,139,1,139,1,140,1,140,1,140,3,140,1049,8,140,1,140,
        3,140,1052,8,140,1,140,3,140,1055,8,140,1,140,1,140,1,140,3,140,
        1060,8,140,1,140,3,140,1063,8,140,1,140,1,140,1,140,3,140,1068,8,
        140,1,140,1,140,1,140,3,140,1073,8,140,1,141,1,141,1,141,1,142,1,
        142,1,143,3,143,1081,8,143,1,143,1,143,1,144,1,144,1,145,1,145,1,
        146,1,146,1,146,3,146,1092,8,146,1,147,1,147,3,147,1096,8,147,1,
        147,1,147,1,147,3,147,1101,8,147,1,147,1,147,3,147,1105,8,147,1,
        148,1,148,1,148,1,149,1,149,1,150,1,150,1,150,1,150,3,150,1116,8,
        150,1,151,1,151,1,151,1,151,1,151,1,151,1,151,1,151,1,151,1,151,
        1,151,3,151,1129,8,151,1,152,1,152,4,152,1133,8,152,11,152,12,152,
        1134,1,152,1,152,1,152,1,152,1,152,1,153,1,153,2,741,896,0,154,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
        25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
        36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
        47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
        57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,
        133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,
        76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,
        171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,
        95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,205,103,207,
        104,209,105,211,106,213,107,215,108,217,109,219,110,221,111,223,
        112,225,113,227,114,229,115,231,116,233,0,235,0,237,0,239,0,241,
        0,243,0,245,0,247,0,249,0,251,0,253,0,255,0,257,0,259,0,261,0,263,
        0,265,0,267,0,269,0,271,0,273,0,275,0,277,0,279,0,281,0,283,0,285,
        0,287,0,289,0,291,0,293,0,295,0,297,0,299,0,301,0,303,0,305,0,307,
        0,1,0,22,2,0,39,39,92,92,2,0,34,34,92,92,3,0,9,10,12,13,32,32,2,
        0,10,10,13,13,4,0,36,36,65,90,95,95,97,122,2,0,0,255,55296,56319,
        1,0,55296,56319,1,0,56320,57343,5,0,36,36,48,57,65,90,95,95,97,122,
        1,0,49,57,2,0,88,88,120,120,3,0,48,57,65,70,97,102,1,0,48,55,2,0,
        66,66,98,98,1,0,48,49,2,0,76,76,108,108,2,0,69,69,101,101,2,0,43,
        43,45,45,4,0,68,68,70,70,100,100,102,102,2,0,80,80,112,112,8,0,34,
        34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,1,0,48,51,1161,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
        1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
        1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
        0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
        0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,
        129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,
        0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,
        1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,
        0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,
        0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,
        175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,
        0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,
        1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,
        0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,
        0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,
        221,1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,
        0,0,0,231,1,0,0,0,1,309,1,0,0,0,3,313,1,0,0,0,5,320,1,0,0,0,7,327,
        1,0,0,0,9,338,1,0,0,0,11,346,1,0,0,0,13,352,1,0,0,0,15,357,1,0,0,
        0,17,366,1,0,0,0,19,373,1,0,0,0,21,381,1,0,0,0,23,387,1,0,0,0,25,
        392,1,0,0,0,27,397,1,0,0,0,29,403,1,0,0,0,31,408,1,0,0,0,33,414,
        1,0,0,0,35,420,1,0,0,0,37,429,1,0,0,0,39,437,1,0,0,0,41,440,1,0,
        0,0,43,447,1,0,0,0,45,452,1,0,0,0,47,457,1,0,0,0,49,465,1,0,0,0,
        51,471,1,0,0,0,53,479,1,0,0,0,55,485,1,0,0,0,57,489,1,0,0,0,59,492,
        1,0,0,0,61,497,1,0,0,0,63,508,1,0,0,0,65,515,1,0,0,0,67,526,1,0,
        0,0,69,530,1,0,0,0,71,540,1,0,0,0,73,545,1,0,0,0,75,552,1,0,0,0,
        77,556,1,0,0,0,79,564,1,0,0,0,81,572,1,0,0,0,83,582,1,0,0,0,85,589,
        1,0,0,0,87,596,1,0,0,0,89,602,1,0,0,0,91,609,1,0,0,0,93,618,1,0,
        0,0,95,624,1,0,0,0,97,631,1,0,0,0,99,644,1,0,0,0,101,649,1,0,0,0,
        103,655,1,0,0,0,105,662,1,0,0,0,107,672,1,0,0,0,109,676,1,0,0,0,
        111,681,1,0,0,0,113,690,1,0,0,0,115,700,1,0,0,0,117,704,1,0,0,0,
        119,715,1,0,0,0,121,717,1,0,0,0,123,724,1,0,0,0,125,734,1,0,0,0,
        127,748,1,0,0,0,129,753,1,0,0,0,131,755,1,0,0,0,133,757,1,0,0,0,
        135,759,1,0,0,0,137,761,1,0,0,0,139,763,1,0,0,0,141,765,1,0,0,0,
        143,767,1,0,0,0,145,769,1,0,0,0,147,771,1,0,0,0,149,773,1,0,0,0,
        151,775,1,0,0,0,153,777,1,0,0,0,155,779,1,0,0,0,157,781,1,0,0,0,
        159,783,1,0,0,0,161,785,1,0,0,0,163,788,1,0,0,0,165,791,1,0,0,0,
        167,794,1,0,0,0,169,797,1,0,0,0,171,800,1,0,0,0,173,803,1,0,0,0,
        175,806,1,0,0,0,177,809,1,0,0,0,179,811,1,0,0,0,181,813,1,0,0,0,
        183,815,1,0,0,0,185,817,1,0,0,0,187,819,1,0,0,0,189,821,1,0,0,0,
        191,823,1,0,0,0,193,825,1,0,0,0,195,828,1,0,0,0,197,831,1,0,0,0,
        199,834,1,0,0,0,201,837,1,0,0,0,203,840,1,0,0,0,205,843,1,0,0,0,
        207,846,1,0,0,0,209,849,1,0,0,0,211,852,1,0,0,0,213,855,1,0,0,0,
        215,859,1,0,0,0,217,863,1,0,0,0,219,868,1,0,0,0,221,875,1,0,0,0,
        223,877,1,0,0,0,225,879,1,0,0,0,227,884,1,0,0,0,229,890,1,0,0,0,
        231,904,1,0,0,0,233,921,1,0,0,0,235,929,1,0,0,0,237,931,1,0,0,0,
        239,945,1,0,0,0,241,947,1,0,0,0,243,958,1,0,0,0,245,962,1,0,0,0,
        247,965,1,0,0,0,249,969,1,0,0,0,251,973,1,0,0,0,253,977,1,0,0,0,
        255,987,1,0,0,0,257,991,1,0,0,0,259,993,1,0,0,0,261,997,1,0,0,0,
        263,1003,1,0,0,0,265,1013,1,0,0,0,267,1017,1,0,0,0,269,1019,1,0,
        0,0,271,1023,1,0,0,0,273,1027,1,0,0,0,275,1037,1,0,0,0,277,1041,
        1,0,0,0,279,1043,1,0,0,0,281,1072,1,0,0,0,283,1074,1,0,0,0,285,1077,
        1,0,0,0,287,1080,1,0,0,0,289,1084,1,0,0,0,291,1086,1,0,0,0,293,1088,
        1,0,0,0,295,1104,1,0,0,0,297,1106,1,0,0,0,299,1109,1,0,0,0,301,1115,
        1,0,0,0,303,1128,1,0,0,0,305,1130,1,0,0,0,307,1141,1,0,0,0,309,310,
        5,118,0,0,310,311,5,97,0,0,311,312,5,114,0,0,312,2,1,0,0,0,313,314,
        5,114,0,0,314,315,5,101,0,0,315,316,5,99,0,0,316,317,5,111,0,0,317,
        318,5,114,0,0,318,319,5,100,0,0,319,4,1,0,0,0,320,321,5,115,0,0,
        321,322,5,101,0,0,322,323,5,97,0,0,323,324,5,108,0,0,324,325,5,101,
        0,0,325,326,5,100,0,0,326,6,1,0,0,0,327,328,5,110,0,0,328,329,5,
        111,0,0,329,330,5,110,0,0,330,331,5,45,0,0,331,332,5,115,0,0,332,
        333,5,101,0,0,333,334,5,97,0,0,334,335,5,108,0,0,335,336,5,101,0,
        0,336,337,5,100,0,0,337,8,1,0,0,0,338,339,5,112,0,0,339,340,5,101,
        0,0,340,341,5,114,0,0,341,342,5,109,0,0,342,343,5,105,0,0,343,344,
        5,116,0,0,344,345,5,115,0,0,345,10,1,0,0,0,346,347,5,121,0,0,347,
        348,5,105,0,0,348,349,5,101,0,0,349,350,5,108,0,0,350,351,5,100,
        0,0,351,12,1,0,0,0,352,353,5,119,0,0,353,354,5,104,0,0,354,355,5,
        101,0,0,355,356,5,110,0,0,356,14,1,0,0,0,357,358,5,97,0,0,358,359,
        5,98,0,0,359,360,5,115,0,0,360,361,5,116,0,0,361,362,5,114,0,0,362,
        363,5,97,0,0,363,364,5,99,0,0,364,365,5,116,0,0,365,16,1,0,0,0,366,
        367,5,97,0,0,367,368,5,115,0,0,368,369,5,115,0,0,369,370,5,101,0,
        0,370,371,5,114,0,0,371,372,5,116,0,0,372,18,1,0,0,0,373,374,5,98,
        0,0,374,375,5,111,0,0,375,376,5,111,0,0,376,377,5,108,0,0,377,378,
        5,101,0,0,378,379,5,97,0,0,379,380,5,110,0,0,380,20,1,0,0,0,381,
        382,5,98,0,0,382,383,5,114,0,0,383,384,5,101,0,0,384,385,5,97,0,
        0,385,386,5,107,0,0,386,22,1,0,0,0,387,388,5,98,0,0,388,389,5,121,
        0,0,389,390,5,116,0,0,390,391,5,101,0,0,391,24,1,0,0,0,392,393,5,
        99,0,0,393,394,5,97,0,0,394,395,5,115,0,0,395,396,5,101,0,0,396,
        26,1,0,0,0,397,398,5,99,0,0,398,399,5,97,0,0,399,400,5,116,0,0,400,
        401,5,99,0,0,401,402,5,104,0,0,402,28,1,0,0,0,403,404,5,99,0,0,404,
        405,5,104,0,0,405,406,5,97,0,0,406,407,5,114,0,0,407,30,1,0,0,0,
        408,409,5,99,0,0,409,410,5,108,0,0,410,411,5,97,0,0,411,412,5,115,
        0,0,412,413,5,115,0,0,413,32,1,0,0,0,414,415,5,99,0,0,415,416,5,
        111,0,0,416,417,5,110,0,0,417,418,5,115,0,0,418,419,5,116,0,0,419,
        34,1,0,0,0,420,421,5,99,0,0,421,422,5,111,0,0,422,423,5,110,0,0,
        423,424,5,116,0,0,424,425,5,105,0,0,425,426,5,110,0,0,426,427,5,
        117,0,0,427,428,5,101,0,0,428,36,1,0,0,0,429,430,5,100,0,0,430,431,
        5,101,0,0,431,432,5,102,0,0,432,433,5,97,0,0,433,434,5,117,0,0,434,
        435,5,108,0,0,435,436,5,116,0,0,436,38,1,0,0,0,437,438,5,100,0,0,
        438,439,5,111,0,0,439,40,1,0,0,0,440,441,5,100,0,0,441,442,5,111,
        0,0,442,443,5,117,0,0,443,444,5,98,0,0,444,445,5,108,0,0,445,446,
        5,101,0,0,446,42,1,0,0,0,447,448,5,101,0,0,448,449,5,108,0,0,449,
        450,5,115,0,0,450,451,5,101,0,0,451,44,1,0,0,0,452,453,5,101,0,0,
        453,454,5,110,0,0,454,455,5,117,0,0,455,456,5,109,0,0,456,46,1,0,
        0,0,457,458,5,101,0,0,458,459,5,120,0,0,459,460,5,116,0,0,460,461,
        5,101,0,0,461,462,5,110,0,0,462,463,5,100,0,0,463,464,5,115,0,0,
        464,48,1,0,0,0,465,466,5,102,0,0,466,467,5,105,0,0,467,468,5,110,
        0,0,468,469,5,97,0,0,469,470,5,108,0,0,470,50,1,0,0,0,471,472,5,
        102,0,0,472,473,5,105,0,0,473,474,5,110,0,0,474,475,5,97,0,0,475,
        476,5,108,0,0,476,477,5,108,0,0,477,478,5,121,0,0,478,52,1,0,0,0,
        479,480,5,102,0,0,480,481,5,108,0,0,481,482,5,111,0,0,482,483,5,
        97,0,0,483,484,5,116,0,0,484,54,1,0,0,0,485,486,5,102,0,0,486,487,
        5,111,0,0,487,488,5,114,0,0,488,56,1,0,0,0,489,490,5,105,0,0,490,
        491,5,102,0,0,491,58,1,0,0,0,492,493,5,103,0,0,493,494,5,111,0,0,
        494,495,5,116,0,0,495,496,5,111,0,0,496,60,1,0,0,0,497,498,5,105,
        0,0,498,499,5,109,0,0,499,500,5,112,0,0,500,501,5,108,0,0,501,502,
        5,101,0,0,502,503,5,109,0,0,503,504,5,101,0,0,504,505,5,110,0,0,
        505,506,5,116,0,0,506,507,5,115,0,0,507,62,1,0,0,0,508,509,5,105,
        0,0,509,510,5,109,0,0,510,511,5,112,0,0,511,512,5,111,0,0,512,513,
        5,114,0,0,513,514,5,116,0,0,514,64,1,0,0,0,515,516,5,105,0,0,516,
        517,5,110,0,0,517,518,5,115,0,0,518,519,5,116,0,0,519,520,5,97,0,
        0,520,521,5,110,0,0,521,522,5,99,0,0,522,523,5,101,0,0,523,524,5,
        111,0,0,524,525,5,102,0,0,525,66,1,0,0,0,526,527,5,105,0,0,527,528,
        5,110,0,0,528,529,5,116,0,0,529,68,1,0,0,0,530,531,5,105,0,0,531,
        532,5,110,0,0,532,533,5,116,0,0,533,534,5,101,0,0,534,535,5,114,
        0,0,535,536,5,102,0,0,536,537,5,97,0,0,537,538,5,99,0,0,538,539,
        5,101,0,0,539,70,1,0,0,0,540,541,5,108,0,0,541,542,5,111,0,0,542,
        543,5,110,0,0,543,544,5,103,0,0,544,72,1,0,0,0,545,546,5,110,0,0,
        546,547,5,97,0,0,547,548,5,116,0,0,548,549,5,105,0,0,549,550,5,118,
        0,0,550,551,5,101,0,0,551,74,1,0,0,0,552,553,5,110,0,0,553,554,5,
        101,0,0,554,555,5,119,0,0,555,76,1,0,0,0,556,557,5,112,0,0,557,558,
        5,97,0,0,558,559,5,99,0,0,559,560,5,107,0,0,560,561,5,97,0,0,561,
        562,5,103,0,0,562,563,5,101,0,0,563,78,1,0,0,0,564,565,5,112,0,0,
        565,566,5,114,0,0,566,567,5,105,0,0,567,568,5,118,0,0,568,569,5,
        97,0,0,569,570,5,116,0,0,570,571,5,101,0,0,571,80,1,0,0,0,572,573,
        5,112,0,0,573,574,5,114,0,0,574,575,5,111,0,0,575,576,5,116,0,0,
        576,577,5,101,0,0,577,578,5,99,0,0,578,579,5,116,0,0,579,580,5,101,
        0,0,580,581,5,100,0,0,581,82,1,0,0,0,582,583,5,112,0,0,583,584,5,
        117,0,0,584,585,5,98,0,0,585,586,5,108,0,0,586,587,5,105,0,0,587,
        588,5,99,0,0,588,84,1,0,0,0,589,590,5,114,0,0,590,591,5,101,0,0,
        591,592,5,116,0,0,592,593,5,117,0,0,593,594,5,114,0,0,594,595,5,
        110,0,0,595,86,1,0,0,0,596,597,5,115,0,0,597,598,5,104,0,0,598,599,
        5,111,0,0,599,600,5,114,0,0,600,601,5,116,0,0,601,88,1,0,0,0,602,
        603,5,115,0,0,603,604,5,116,0,0,604,605,5,97,0,0,605,606,5,116,0,
        0,606,607,5,105,0,0,607,608,5,99,0,0,608,90,1,0,0,0,609,610,5,115,
        0,0,610,611,5,116,0,0,611,612,5,114,0,0,612,613,5,105,0,0,613,614,
        5,99,0,0,614,615,5,116,0,0,615,616,5,102,0,0,616,617,5,112,0,0,617,
        92,1,0,0,0,618,619,5,115,0,0,619,620,5,117,0,0,620,621,5,112,0,0,
        621,622,5,101,0,0,622,623,5,114,0,0,623,94,1,0,0,0,624,625,5,115,
        0,0,625,626,5,119,0,0,626,627,5,105,0,0,627,628,5,116,0,0,628,629,
        5,99,0,0,629,630,5,104,0,0,630,96,1,0,0,0,631,632,5,115,0,0,632,
        633,5,121,0,0,633,634,5,110,0,0,634,635,5,99,0,0,635,636,5,104,0,
        0,636,637,5,114,0,0,637,638,5,111,0,0,638,639,5,110,0,0,639,640,
        5,105,0,0,640,641,5,122,0,0,641,642,5,101,0,0,642,643,5,100,0,0,
        643,98,1,0,0,0,644,645,5,116,0,0,645,646,5,104,0,0,646,647,5,105,
        0,0,647,648,5,115,0,0,648,100,1,0,0,0,649,650,5,116,0,0,650,651,
        5,104,0,0,651,652,5,114,0,0,652,653,5,111,0,0,653,654,5,119,0,0,
        654,102,1,0,0,0,655,656,5,116,0,0,656,657,5,104,0,0,657,658,5,114,
        0,0,658,659,5,111,0,0,659,660,5,119,0,0,660,661,5,115,0,0,661,104,
        1,0,0,0,662,663,5,116,0,0,663,664,5,114,0,0,664,665,5,97,0,0,665,
        666,5,110,0,0,666,667,5,115,0,0,667,668,5,105,0,0,668,669,5,101,
        0,0,669,670,5,110,0,0,670,671,5,116,0,0,671,106,1,0,0,0,672,673,
        5,116,0,0,673,674,5,114,0,0,674,675,5,121,0,0,675,108,1,0,0,0,676,
        677,5,118,0,0,677,678,5,111,0,0,678,679,5,105,0,0,679,680,5,100,
        0,0,680,110,1,0,0,0,681,682,5,118,0,0,682,683,5,111,0,0,683,684,
        5,108,0,0,684,685,5,97,0,0,685,686,5,116,0,0,686,687,5,105,0,0,687,
        688,5,108,0,0,688,689,5,101,0,0,689,112,1,0,0,0,690,691,5,119,0,
        0,691,692,5,104,0,0,692,693,5,105,0,0,693,694,5,108,0,0,694,695,
        5,101,0,0,695,114,1,0,0,0,696,701,3,237,118,0,697,701,3,249,124,
        0,698,701,3,259,129,0,699,701,3,269,134,0,700,696,1,0,0,0,700,697,
        1,0,0,0,700,698,1,0,0,0,700,699,1,0,0,0,701,116,1,0,0,0,702,705,
        3,281,140,0,703,705,3,293,146,0,704,702,1,0,0,0,704,703,1,0,0,0,
        705,118,1,0,0,0,706,707,5,116,0,0,707,708,5,114,0,0,708,709,5,117,
        0,0,709,716,5,101,0,0,710,711,5,102,0,0,711,712,5,97,0,0,712,713,
        5,108,0,0,713,714,5,115,0,0,714,716,5,101,0,0,715,706,1,0,0,0,715,
        710,1,0,0,0,716,120,1,0,0,0,717,720,5,39,0,0,718,721,8,0,0,0,719,
        721,3,301,150,0,720,718,1,0,0,0,720,719,1,0,0,0,721,722,1,0,0,0,
        722,723,5,39,0,0,723,122,1,0,0,0,724,729,5,34,0,0,725,728,8,1,0,
        0,726,728,3,301,150,0,727,725,1,0,0,0,727,726,1,0,0,0,728,731,1,
        0,0,0,729,727,1,0,0,0,729,730,1,0,0,0,730,732,1,0,0,0,731,729,1,
        0,0,0,732,733,5,34,0,0,733,124,1,0,0,0,734,735,5,34,0,0,735,736,
        5,34,0,0,736,737,5,34,0,0,737,741,1,0,0,0,738,740,9,0,0,0,739,738,
        1,0,0,0,740,743,1,0,0,0,741,742,1,0,0,0,741,739,1,0,0,0,742,744,
        1,0,0,0,743,741,1,0,0,0,744,745,5,34,0,0,745,746,5,34,0,0,746,747,
        5,34,0,0,747,126,1,0,0,0,748,749,5,110,0,0,749,750,5,117,0,0,750,
        751,5,108,0,0,751,752,5,108,0,0,752,128,1,0,0,0,753,754,5,40,0,0,
        754,130,1,0,0,0,755,756,5,41,0,0,756,132,1,0,0,0,757,758,5,123,0,
        0,758,134,1,0,0,0,759,760,5,125,0,0,760,136,1,0,0,0,761,762,5,91,
        0,0,762,138,1,0,0,0,763,764,5,93,0,0,764,140,1,0,0,0,765,766,5,59,
        0,0,766,142,1,0,0,0,767,768,5,44,0,0,768,144,1,0,0,0,769,770,5,46,
        0,0,770,146,1,0,0,0,771,772,5,61,0,0,772,148,1,0,0,0,773,774,5,62,
        0,0,774,150,1,0,0,0,775,776,5,60,0,0,776,152,1,0,0,0,777,778,5,33,
        0,0,778,154,1,0,0,0,779,780,5,126,0,0,780,156,1,0,0,0,781,782,5,
        63,0,0,782,158,1,0,0,0,783,784,5,58,0,0,784,160,1,0,0,0,785,786,
        5,61,0,0,786,787,5,61,0,0,787,162,1,0,0,0,788,789,5,60,0,0,789,790,
        5,61,0,0,790,164,1,0,0,0,791,792,5,62,0,0,792,793,5,61,0,0,793,166,
        1,0,0,0,794,795,5,33,0,0,795,796,5,61,0,0,796,168,1,0,0,0,797,798,
        5,38,0,0,798,799,5,38,0,0,799,170,1,0,0,0,800,801,5,124,0,0,801,
        802,5,124,0,0,802,172,1,0,0,0,803,804,5,43,0,0,804,805,5,43,0,0,
        805,174,1,0,0,0,806,807,5,45,0,0,807,808,5,45,0,0,808,176,1,0,0,
        0,809,810,5,43,0,0,810,178,1,0,0,0,811,812,5,45,0,0,812,180,1,0,
        0,0,813,814,5,42,0,0,814,182,1,0,0,0,815,816,5,47,0,0,816,184,1,
        0,0,0,817,818,5,38,0,0,818,186,1,0,0,0,819,820,5,124,0,0,820,188,
        1,0,0,0,821,822,5,94,0,0,822,190,1,0,0,0,823,824,5,37,0,0,824,192,
        1,0,0,0,825,826,5,45,0,0,826,827,5,62,0,0,827,194,1,0,0,0,828,829,
        5,58,0,0,829,830,5,58,0,0,830,196,1,0,0,0,831,832,5,43,0,0,832,833,
        5,61,0,0,833,198,1,0,0,0,834,835,5,45,0,0,835,836,5,61,0,0,836,200,
        1,0,0,0,837,838,5,42,0,0,838,839,5,61,0,0,839,202,1,0,0,0,840,841,
        5,47,0,0,841,842,5,61,0,0,842,204,1,0,0,0,843,844,5,38,0,0,844,845,
        5,61,0,0,845,206,1,0,0,0,846,847,5,124,0,0,847,848,5,61,0,0,848,
        208,1,0,0,0,849,850,5,94,0,0,850,851,5,61,0,0,851,210,1,0,0,0,852,
        853,5,37,0,0,853,854,5,61,0,0,854,212,1,0,0,0,855,856,5,60,0,0,856,
        857,5,60,0,0,857,858,5,61,0,0,858,214,1,0,0,0,859,860,5,62,0,0,860,
        861,5,62,0,0,861,862,5,61,0,0,862,216,1,0,0,0,863,864,5,62,0,0,864,
        865,5,62,0,0,865,866,5,62,0,0,866,867,5,61,0,0,867,218,1,0,0,0,868,
        872,3,233,116,0,869,871,3,235,117,0,870,869,1,0,0,0,871,874,1,0,
        0,0,872,870,1,0,0,0,872,873,1,0,0,0,873,220,1,0,0,0,874,872,1,0,
        0,0,875,876,5,95,0,0,876,222,1,0,0,0,877,878,5,64,0,0,878,224,1,
        0,0,0,879,880,5,46,0,0,880,881,5,46,0,0,881,882,5,46,0,0,882,226,
        1,0,0,0,883,885,7,2,0,0,884,883,1,0,0,0,885,886,1,0,0,0,886,884,
        1,0,0,0,886,887,1,0,0,0,887,888,1,0,0,0,888,889,6,113,0,0,889,228,
        1,0,0,0,890,891,5,47,0,0,891,892,5,42,0,0,892,896,1,0,0,0,893,895,
        9,0,0,0,894,893,1,0,0,0,895,898,1,0,0,0,896,897,1,0,0,0,896,894,
        1,0,0,0,897,899,1,0,0,0,898,896,1,0,0,0,899,900,5,42,0,0,900,901,
        5,47,0,0,901,902,1,0,0,0,902,903,6,114,0,0,903,230,1,0,0,0,904,905,
        5,47,0,0,905,906,5,47,0,0,906,910,1,0,0,0,907,909,8,3,0,0,908,907,
        1,0,0,0,909,912,1,0,0,0,910,908,1,0,0,0,910,911,1,0,0,0,911,913,
        1,0,0,0,912,910,1,0,0,0,913,914,6,115,0,0,914,232,1,0,0,0,915,922,
        7,4,0,0,916,917,8,5,0,0,917,922,4,116,0,0,918,919,7,6,0,0,919,920,
        7,7,0,0,920,922,4,116,1,0,921,915,1,0,0,0,921,916,1,0,0,0,921,918,
        1,0,0,0,922,234,1,0,0,0,923,930,7,8,0,0,924,925,8,5,0,0,925,930,
        4,117,2,0,926,927,7,6,0,0,927,928,7,7,0,0,928,930,4,117,3,0,929,
        923,1,0,0,0,929,924,1,0,0,0,929,926,1,0,0,0,930,236,1,0,0,0,931,
        933,3,239,119,0,932,934,3,279,139,0,933,932,1,0,0,0,933,934,1,0,
        0,0,934,238,1,0,0,0,935,946,5,48,0,0,936,943,7,9,0,0,937,939,3,241,
        120,0,938,937,1,0,0,0,938,939,1,0,0,0,939,944,1,0,0,0,940,941,3,
        247,123,0,941,942,3,241,120,0,942,944,1,0,0,0,943,938,1,0,0,0,943,
        940,1,0,0,0,944,946,1,0,0,0,945,935,1,0,0,0,945,936,1,0,0,0,946,
        240,1,0,0,0,947,955,3,243,121,0,948,950,3,245,122,0,949,948,1,0,
        0,0,950,953,1,0,0,0,951,949,1,0,0,0,951,952,1,0,0,0,952,954,1,0,
        0,0,953,951,1,0,0,0,954,956,3,243,121,0,955,951,1,0,0,0,955,956,
        1,0,0,0,956,242,1,0,0,0,957,959,2,48,57,0,958,957,1,0,0,0,959,244,
        1,0,0,0,960,963,3,243,121,0,961,963,5,95,0,0,962,960,1,0,0,0,962,
        961,1,0,0,0,963,246,1,0,0,0,964,966,5,95,0,0,965,964,1,0,0,0,966,
        967,1,0,0,0,967,965,1,0,0,0,967,968,1,0,0,0,968,248,1,0,0,0,969,
        971,3,251,125,0,970,972,3,279,139,0,971,970,1,0,0,0,971,972,1,0,
        0,0,972,250,1,0,0,0,973,974,5,48,0,0,974,975,7,10,0,0,975,976,3,
        253,126,0,976,252,1,0,0,0,977,985,3,255,127,0,978,980,3,257,128,
        0,979,978,1,0,0,0,980,983,1,0,0,0,981,979,1,0,0,0,981,982,1,0,0,
        0,982,984,1,0,0,0,983,981,1,0,0,0,984,986,3,255,127,0,985,981,1,
        0,0,0,985,986,1,0,0,0,986,254,1,0,0,0,987,988,7,11,0,0,988,256,1,
        0,0,0,989,992,3,255,127,0,990,992,5,95,0,0,991,989,1,0,0,0,991,990,
        1,0,0,0,992,258,1,0,0,0,993,995,3,261,130,0,994,996,3,279,139,0,
        995,994,1,0,0,0,995,996,1,0,0,0,996,260,1,0,0,0,997,999,5,48,0,0,
        998,1000,3,247,123,0,999,998,1,0,0,0,999,1000,1,0,0,0,1000,1001,
        1,0,0,0,1001,1002,3,263,131,0,1002,262,1,0,0,0,1003,1011,3,265,132,
        0,1004,1006,3,267,133,0,1005,1004,1,0,0,0,1006,1009,1,0,0,0,1007,
        1005,1,0,0,0,1007,1008,1,0,0,0,1008,1010,1,0,0,0,1009,1007,1,0,0,
        0,1010,1012,3,265,132,0,1011,1007,1,0,0,0,1011,1012,1,0,0,0,1012,
        264,1,0,0,0,1013,1014,7,12,0,0,1014,266,1,0,0,0,1015,1018,3,265,
        132,0,1016,1018,5,95,0,0,1017,1015,1,0,0,0,1017,1016,1,0,0,0,1018,
        268,1,0,0,0,1019,1021,3,271,135,0,1020,1022,3,279,139,0,1021,1020,
        1,0,0,0,1021,1022,1,0,0,0,1022,270,1,0,0,0,1023,1024,5,48,0,0,1024,
        1025,7,13,0,0,1025,1026,3,273,136,0,1026,272,1,0,0,0,1027,1035,3,
        275,137,0,1028,1030,3,277,138,0,1029,1028,1,0,0,0,1030,1033,1,0,
        0,0,1031,1029,1,0,0,0,1031,1032,1,0,0,0,1032,1034,1,0,0,0,1033,1031,
        1,0,0,0,1034,1036,3,275,137,0,1035,1031,1,0,0,0,1035,1036,1,0,0,
        0,1036,274,1,0,0,0,1037,1038,7,14,0,0,1038,276,1,0,0,0,1039,1042,
        3,275,137,0,1040,1042,5,95,0,0,1041,1039,1,0,0,0,1041,1040,1,0,0,
        0,1042,278,1,0,0,0,1043,1044,7,15,0,0,1044,280,1,0,0,0,1045,1046,
        3,241,120,0,1046,1048,5,46,0,0,1047,1049,3,241,120,0,1048,1047,1,
        0,0,0,1048,1049,1,0,0,0,1049,1051,1,0,0,0,1050,1052,3,283,141,0,
        1051,1050,1,0,0,0,1051,1052,1,0,0,0,1052,1054,1,0,0,0,1053,1055,
        3,291,145,0,1054,1053,1,0,0,0,1054,1055,1,0,0,0,1055,1073,1,0,0,
        0,1056,1057,5,46,0,0,1057,1059,3,241,120,0,1058,1060,3,283,141,0,
        1059,1058,1,0,0,0,1059,1060,1,0,0,0,1060,1062,1,0,0,0,1061,1063,
        3,291,145,0,1062,1061,1,0,0,0,1062,1063,1,0,0,0,1063,1073,1,0,0,
        0,1064,1065,3,241,120,0,1065,1067,3,283,141,0,1066,1068,3,291,145,
        0,1067,1066,1,0,0,0,1067,1068,1,0,0,0,1068,1073,1,0,0,0,1069,1070,
        3,241,120,0,1070,1071,3,291,145,0,1071,1073,1,0,0,0,1072,1045,1,
        0,0,0,1072,1056,1,0,0,0,1072,1064,1,0,0,0,1072,1069,1,0,0,0,1073,
        282,1,0,0,0,1074,1075,3,285,142,0,1075,1076,3,287,143,0,1076,284,
        1,0,0,0,1077,1078,7,16,0,0,1078,286,1,0,0,0,1079,1081,3,289,144,
        0,1080,1079,1,0,0,0,1080,1081,1,0,0,0,1081,1082,1,0,0,0,1082,1083,
        3,241,120,0,1083,288,1,0,0,0,1084,1085,7,17,0,0,1085,290,1,0,0,0,
        1086,1087,7,18,0,0,1087,292,1,0,0,0,1088,1089,3,295,147,0,1089,1091,
        3,297,148,0,1090,1092,3,291,145,0,1091,1090,1,0,0,0,1091,1092,1,
        0,0,0,1092,294,1,0,0,0,1093,1095,3,251,125,0,1094,1096,5,46,0,0,
        1095,1094,1,0,0,0,1095,1096,1,0,0,0,1096,1105,1,0,0,0,1097,1098,
        5,48,0,0,1098,1100,7,10,0,0,1099,1101,3,253,126,0,1100,1099,1,0,
        0,0,1100,1101,1,0,0,0,1101,1102,1,0,0,0,1102,1103,5,46,0,0,1103,
        1105,3,253,126,0,1104,1093,1,0,0,0,1104,1097,1,0,0,0,1105,296,1,
        0,0,0,1106,1107,3,299,149,0,1107,1108,3,287,143,0,1108,298,1,0,0,
        0,1109,1110,7,19,0,0,1110,300,1,0,0,0,1111,1112,5,92,0,0,1112,1116,
        7,20,0,0,1113,1116,3,303,151,0,1114,1116,3,305,152,0,1115,1111,1,
        0,0,0,1115,1113,1,0,0,0,1115,1114,1,0,0,0,1116,302,1,0,0,0,1117,
        1118,5,92,0,0,1118,1129,3,265,132,0,1119,1120,5,92,0,0,1120,1121,
        3,265,132,0,1121,1122,3,265,132,0,1122,1129,1,0,0,0,1123,1124,5,
        92,0,0,1124,1125,3,307,153,0,1125,1126,3,265,132,0,1126,1127,3,265,
        132,0,1127,1129,1,0,0,0,1128,1117,1,0,0,0,1128,1119,1,0,0,0,1128,
        1123,1,0,0,0,1129,304,1,0,0,0,1130,1132,5,92,0,0,1131,1133,5,117,
        0,0,1132,1131,1,0,0,0,1133,1134,1,0,0,0,1134,1132,1,0,0,0,1134,1135,
        1,0,0,0,1135,1136,1,0,0,0,1136,1137,3,255,127,0,1137,1138,3,255,
        127,0,1138,1139,3,255,127,0,1139,1140,3,255,127,0,1140,306,1,0,0,
        0,1141,1142,7,21,0,0,1142,308,1,0,0,0,51,0,700,704,715,720,727,729,
        741,872,886,896,910,921,929,933,938,943,945,951,955,958,962,967,
        971,981,985,991,995,999,1007,1011,1017,1021,1031,1035,1041,1048,
        1051,1054,1059,1062,1067,1072,1080,1091,1095,1100,1104,1115,1128,
        1134,1,6,0,0
    ]

class JavaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    VAR = 1
    RECORD = 2
    SEALED = 3
    NON_SEALED = 4
    PERMITS = 5
    YIELD = 6
    WHEN = 7
    ABSTRACT = 8
    ASSERT = 9
    BOOLEAN = 10
    BREAK = 11
    BYTE = 12
    CASE = 13
    CATCH = 14
    CHAR = 15
    CLASS = 16
    CONST = 17
    CONTINUE = 18
    DEFAULT = 19
    DO = 20
    DOUBLE = 21
    ELSE = 22
    ENUM = 23
    EXTENDS = 24
    FINAL = 25
    FINALLY = 26
    FLOAT = 27
    FOR = 28
    IF = 29
    GOTO = 30
    IMPLEMENTS = 31
    IMPORT = 32
    INSTANCEOF = 33
    INT = 34
    INTERFACE = 35
    LONG = 36
    NATIVE = 37
    NEW = 38
    PACKAGE = 39
    PRIVATE = 40
    PROTECTED = 41
    PUBLIC = 42
    RETURN = 43
    SHORT = 44
    STATIC = 45
    STRICTFP = 46
    SUPER = 47
    SWITCH = 48
    SYNCHRONIZED = 49
    THIS = 50
    THROW = 51
    THROWS = 52
    TRANSIENT = 53
    TRY = 54
    VOID = 55
    VOLATILE = 56
    WHILE = 57
    IntegerLiteral = 58
    FloatingPointLiteral = 59
    BooleanLiteral = 60
    CharacterLiteral = 61
    StringLiteral = 62
    TEXT_BLOCK = 63
    NullLiteral = 64
    LPAREN = 65
    RPAREN = 66
    LBRACE = 67
    RBRACE = 68
    LBRACK = 69
    RBRACK = 70
    SEMI = 71
    COMMA = 72
    DOT = 73
    ASSIGN = 74
    GT = 75
    LT = 76
    BANG = 77
    TILDE = 78
    QUESTION = 79
    COLON = 80
    EQUAL = 81
    LE = 82
    GE = 83
    NOTEQUAL = 84
    AND = 85
    OR = 86
    INC = 87
    DEC = 88
    ADD = 89
    SUB = 90
    MUL = 91
    DIV = 92
    BITAND = 93
    BITOR = 94
    CARET = 95
    MOD = 96
    ARROW = 97
    COLONCOLON = 98
    ADD_ASSIGN = 99
    SUB_ASSIGN = 100
    MUL_ASSIGN = 101
    DIV_ASSIGN = 102
    AND_ASSIGN = 103
    OR_ASSIGN = 104
    XOR_ASSIGN = 105
    MOD_ASSIGN = 106
    LSHIFT_ASSIGN = 107
    RSHIFT_ASSIGN = 108
    URSHIFT_ASSIGN = 109
    Identifier = 110
    UNDERSCORE = 111
    AT = 112
    ELLIPSIS = 113
    WS = 114
    COMMENT = 115
    LINE_COMMENT = 116

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'var'", "'record'", "'sealed'", "'non-sealed'", "'permits'", 
            "'yield'", "'when'", "'abstract'", "'assert'", "'boolean'", 
            "'break'", "'byte'", "'case'", "'catch'", "'char'", "'class'", 
            "'const'", "'continue'", "'default'", "'do'", "'double'", "'else'", 
            "'enum'", "'extends'", "'final'", "'finally'", "'float'", "'for'", 
            "'if'", "'goto'", "'implements'", "'import'", "'instanceof'", 
            "'int'", "'interface'", "'long'", "'native'", "'new'", "'package'", 
            "'private'", "'protected'", "'public'", "'return'", "'short'", 
            "'static'", "'strictfp'", "'super'", "'switch'", "'synchronized'", 
            "'this'", "'throw'", "'throws'", "'transient'", "'try'", "'void'", 
            "'volatile'", "'while'", "'null'", "'('", "')'", "'{'", "'}'", 
            "'['", "']'", "';'", "','", "'.'", "'='", "'>'", "'<'", "'!'", 
            "'~'", "'?'", "':'", "'=='", "'<='", "'>='", "'!='", "'&&'", 
            "'||'", "'++'", "'--'", "'+'", "'-'", "'*'", "'/'", "'&'", "'|'", 
            "'^'", "'%'", "'->'", "'::'", "'+='", "'-='", "'*='", "'/='", 
            "'&='", "'|='", "'^='", "'%='", "'<<='", "'>>='", "'>>>='", 
            "'_'", "'@'", "'...'" ]

    symbolicNames = [ "<INVALID>",
            "VAR", "RECORD", "SEALED", "NON_SEALED", "PERMITS", "YIELD", 
            "WHEN", "ABSTRACT", "ASSERT", "BOOLEAN", "BREAK", "BYTE", "CASE", 
            "CATCH", "CHAR", "CLASS", "CONST", "CONTINUE", "DEFAULT", "DO", 
            "DOUBLE", "ELSE", "ENUM", "EXTENDS", "FINAL", "FINALLY", "FLOAT", 
            "FOR", "IF", "GOTO", "IMPLEMENTS", "IMPORT", "INSTANCEOF", "INT", 
            "INTERFACE", "LONG", "NATIVE", "NEW", "PACKAGE", "PRIVATE", 
            "PROTECTED", "PUBLIC", "RETURN", "SHORT", "STATIC", "STRICTFP", 
            "SUPER", "SWITCH", "SYNCHRONIZED", "THIS", "THROW", "THROWS", 
            "TRANSIENT", "TRY", "VOID", "VOLATILE", "WHILE", "IntegerLiteral", 
            "FloatingPointLiteral", "BooleanLiteral", "CharacterLiteral", 
            "StringLiteral", "TEXT_BLOCK", "NullLiteral", "LPAREN", "RPAREN", 
            "LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", 
            "ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", "COLON", 
            "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", 
            "ADD", "SUB", "MUL", "DIV", "BITAND", "BITOR", "CARET", "MOD", 
            "ARROW", "COLONCOLON", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", 
            "DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN", 
            "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", "URSHIFT_ASSIGN", "Identifier", 
            "UNDERSCORE", "AT", "ELLIPSIS", "WS", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "VAR", "RECORD", "SEALED", "NON_SEALED", "PERMITS", "YIELD", 
                  "WHEN", "ABSTRACT", "ASSERT", "BOOLEAN", "BREAK", "BYTE", 
                  "CASE", "CATCH", "CHAR", "CLASS", "CONST", "CONTINUE", 
                  "DEFAULT", "DO", "DOUBLE", "ELSE", "ENUM", "EXTENDS", 
                  "FINAL", "FINALLY", "FLOAT", "FOR", "IF", "GOTO", "IMPLEMENTS", 
                  "IMPORT", "INSTANCEOF", "INT", "INTERFACE", "LONG", "NATIVE", 
                  "NEW", "PACKAGE", "PRIVATE", "PROTECTED", "PUBLIC", "RETURN", 
                  "SHORT", "STATIC", "STRICTFP", "SUPER", "SWITCH", "SYNCHRONIZED", 
                  "THIS", "THROW", "THROWS", "TRANSIENT", "TRY", "VOID", 
                  "VOLATILE", "WHILE", "IntegerLiteral", "FloatingPointLiteral", 
                  "BooleanLiteral", "CharacterLiteral", "StringLiteral", 
                  "TEXT_BLOCK", "NullLiteral", "LPAREN", "RPAREN", "LBRACE", 
                  "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", 
                  "ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", "COLON", 
                  "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", 
                  "ADD", "SUB", "MUL", "DIV", "BITAND", "BITOR", "CARET", 
                  "MOD", "ARROW", "COLONCOLON", "ADD_ASSIGN", "SUB_ASSIGN", 
                  "MUL_ASSIGN", "DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", 
                  "XOR_ASSIGN", "MOD_ASSIGN", "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", 
                  "URSHIFT_ASSIGN", "Identifier", "UNDERSCORE", "AT", "ELLIPSIS", 
                  "WS", "COMMENT", "LINE_COMMENT", "JavaLetter", "JavaLetterOrDigit", 
                  "DecimalIntegerLiteral", "DecimalNumeral", "Digits", "Digit", 
                  "DigitOrUnderscore", "Underscores", "HexIntegerLiteral", 
                  "HexNumeral", "HexDigits", "HexDigit", "HexDigitOrUnderscore", 
                  "OctalIntegerLiteral", "OctalNumeral", "OctalDigits", 
                  "OctalDigit", "OctalDigitOrUnderscore", "BinaryIntegerLiteral", 
                  "BinaryNumeral", "BinaryDigits", "BinaryDigit", "BinaryDigitOrUnderscore", 
                  "IntegerTypeSuffix", "DecimalFloatingPointLiteral", "ExponentPart", 
                  "ExponentIndicator", "SignedInteger", "Sign", "FloatTypeSuffix", 
                  "HexadecimalFloatingPointLiteral", "HexSignificand", "BinaryExponent", 
                  "BinaryExponentIndicator", "EscapeSequence", "OctalEscape", 
                  "UnicodeEscape", "ZeroToThree" ]

    grammarFileName = "Java.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


    def isJavaIdentifierStart(self, codePoint):
        if 'L' in unicodedata.category(chr(codePoint)) or chr(codePoint) == u'$' or chr(codePoint) == u'_':
            return True
        return False

    def isJavaIdentifierPart(self, codePoint):
        if 'L' in unicodedata.category(chr(codePoint)) or 'N' in unicodedata.category(chr(codePoint)) or chr(codePoint) == u'$' or chr(codePoint) == u'_':
            return True
        return False

    def toCodePoint(self, high, low):
        return int(high)*256 + int(low)


    def sempred(self, localctx:RuleContext, ruleIndex:int, predIndex:int):
        if self._predicates is None:
            preds = dict()
            preds[116] = self.JavaLetter_sempred
            preds[117] = self.JavaLetterOrDigit_sempred
            self._predicates = preds
        pred = self._predicates.get(ruleIndex, None)
        if pred is not None:
            return pred(localctx, predIndex)
        else:
            raise Exception("No registered predicate for:" + str(ruleIndex))

    def JavaLetter_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 0:
                return self.isJavaIdentifierStart(self._input.LA(-1))
         

            if predIndex == 1:
                return self.isJavaIdentifierStart(self.toCodePoint(self._input.LA(-2), self._input.LA(-1)))
         

    def JavaLetterOrDigit_sempred(self, localctx:RuleContext, predIndex:int):
            if predIndex == 2:
                return self.isJavaIdentifierPart(self._input.LA(-1))
         

            if predIndex == 3:
                return self.isJavaIdentifierPart(self.toCodePoint(self._input.LA(-2), self._input.LA(-1)))
         


